(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{554:function(t,h,n){"use strict";n.r(h);var s=n(4),a=Object(s.a)({},(function(){var t=this,h=t.$createElement,n=t._self._c||h;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("hash\n如果都使用hash的话，因为这是工程级别的，即每次修改任何一个文件，所有文件名的hash至都将改变。所以一旦修改了任何一个文件，整个项目的文件缓存都将失效")])]),t._v(" "),n("li",[n("p",[t._v("chunkhash\nchunkhash根据不同的入口文件(Entry)进行依赖文件解析、构建对应的chunk，生成对应的哈希值。在生产环境里把一些公共库和程序入口文件区分开，单独打包构建，接着我们采用chunkhash的方式生成哈希值，那么只要我们不改动公共库的代码，就可以保证其哈希值不会受影响。并且webpack4中支持了异步import功能，固，chunkhash也作用于此")])]),t._v(" "),n("li",[n("p",[t._v("contenthash\n针对文件内容级别的，只有你自己模块的内容变了，那么hash值才改变")]),t._v(" "),n("p",[t._v("custom-cra")])])])])}),[],!1,null,null,null);h.default=a.exports}}]);