(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{578:function(a,t,s){"use strict";s.r(t);var n=s(4),r=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"异步编程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#异步编程"}},[a._v("#")]),a._v(" 异步编程")]),a._v(" "),s("h2",{attrs:{id:"基本介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本介绍"}},[a._v("#")]),a._v(" 基本介绍")]),a._v(" "),s("p",[a._v('首先我们从字面上来理解"异步"，异步就是不同步，也就是不连续，所以说，不连续的执行任务，就叫做异步，所以，'),s("strong",[a._v("把某段程序分为多段，并且在不连续的时间段执行就叫做异步编程")]),a._v("。")]),a._v(" "),s("p",[a._v("当然，异步编程的处理方式，是不符合人类的思考方式的，人类更偏好以同步方式进行思考，"),s("strong",[a._v("异步编程的语法目标，就是怎样让它更像同步编程")]),a._v("。")]),a._v(" "),s("p",[a._v("Javascript 语言的执行环境是“单线程”的，所以，异步编程对其就显得格外重要。")]),a._v(" "),s("h2",{attrs:{id:"回调函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#回调函数"}},[a._v("#")]),a._v(" 回调函数")]),a._v(" "),s("p",[a._v("在JavaScript的ES6前，回调函数就实现异步编程的一种形式。")]),a._v(" "),s("p",[s("strong",[a._v("所谓回调函数，就是把程序的第二段单独写在一个函数中，等到重新执行到这段程序中时，在重新进行调用处理")]),a._v("。一般以“callback”命名，即重新调用。")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ajax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 处理逻辑")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("上述代码的"),s("code",[a._v("ajax")]),a._v("方法的第二个参数就是回调函数。")]),a._v(" "),s("p",[a._v("当有一个请求需要依赖多个请求时：")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ajax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 处理逻辑")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ajax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("url1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 处理逻辑")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ajax")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("url2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 处理逻辑")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v('不难想象，如果需要多个请求，就会出现多重嵌套，代码不是纵向发展，而是横向发展，根本不利于阅读和维护。这种情况就称为"回调地狱"（callback hell）。')]),a._v(" "),s("p",[a._v("回调地狱的根本问题就是：")]),a._v(" "),s("ol",[s("li",[a._v("嵌套函数存在耦合性，一旦有所改动，就会牵一发而动全身。")]),a._v(" "),s("li",[a._v("嵌套函数一多，就很难处理错误。")]),a._v(" "),s("li",[a._v("无法用"),s("code",[a._v("try...catch")]),a._v("进行错误捕获。")])]),a._v(" "),s("h2",{attrs:{id:"事件监听"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件监听"}},[a._v("#")]),a._v(" 事件监听")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h2",{attrs:{id:"发布-订阅"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#发布-订阅"}},[a._v("#")]),a._v(" 发布/订阅")]),a._v(" "),s("h2",{attrs:{id:"promise"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[a._v("#")]),a._v(" promise")]),a._v(" "),s("h2",{attrs:{id:"generator"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[a._v("#")]),a._v(" generator")]),a._v(" "),s("h3",{attrs:{id:"协程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#协程"}},[a._v("#")]),a._v(" 协程")]),a._v(" "),s("h2",{attrs:{id:"async-await"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#async-await"}},[a._v("#")]),a._v(" async/await")])])}),[],!1,null,null,null);t.default=r.exports}}]);