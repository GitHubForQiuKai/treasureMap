(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{509:function(_,e,v){"use strict";v.r(e);var o=v(4),t=Object(o.a)({},(function(){var _=this,e=_.$createElement,v=_._self._c||e;return v("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[v("h1",{attrs:{id:"vue源码学习"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vue源码学习"}},[_._v("#")]),_._v(" Vue源码学习")]),_._v(" "),v("p",[v("code",[_._v("Vue")]),_._v("源码大概分以下几部分：")]),_._v(" "),v("ul",[v("li",[_._v("数据响应式")]),_._v(" "),v("li",[_._v("初始化过程")]),_._v(" "),v("li",[_._v("异步更新策略")]),_._v(" "),v("li",[_._v("虚拟dom与diff算法")]),_._v(" "),v("li",[_._v("编译原理")])]),_._v(" "),v("h2",{attrs:{id:"大管家dep和小管家dep"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#大管家dep和小管家dep"}},[_._v("#")]),_._v(" 大管家Dep和小管家dep")]),_._v(" "),v("ul",[v("li",[v("p",[_._v("大管家是每一个key产生的dep，用来通知key值改变的更新")])]),_._v(" "),v("li",[v("p",[_._v("小管家是"),v("code",[_._v("ob")]),_._v("实例内部的"),v("code",[_._v("dep")]),_._v("，用来通知数组的改变和属性的新增和删除的更新")]),_._v(" "),v("ol",[v("li",[_._v("在"),v("code",[_._v("defineReactive")]),_._v("时，如果当前"),v("code",[_._v("key")]),_._v("对应的是对象，就会创建"),v("code",[_._v("ob")]),_._v("实例")]),_._v(" "),v("li",[_._v("将"),v("code",[_._v("ob")]),_._v("实例挂载在"),v("code",[_._v("__ob__")]),_._v("属性上")]),_._v(" "),v("li",[_._v("新增"),v("code",[_._v("dep")]),_._v("，构建和当前组件"),v("code",[_._v("watcher")]),_._v("的对应关系")]),_._v(" "),v("li",[_._v("在使用"),v("code",[_._v("Vue.set(obj, key, value)")]),_._v("时，通过会获取"),v("code",[_._v("obj")]),_._v("上的"),v("code",[_._v("__ob__")]),_._v("属性获取"),v("code",[_._v("ob")]),_._v("实例")]),_._v(" "),v("li",[_._v("获取"),v("code",[_._v("ob")]),_._v("实例上的"),v("code",[_._v("dep")]),_._v("，通知"),v("code",[_._v("dep")]),_._v("更新")]),_._v(" "),v("li",[v("code",[_._v("key")]),_._v("可能是对象，就要重新响应式"),v("code",[_._v("key")])])])]),_._v(" "),v("li",[v("p",[_._v("Promise.then MutationObserver setImmediate")])])])])}),[],!1,null,null,null);e.default=t.exports}}]);