(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{557:function(t,_,e){"use strict";e.r(_);var v=e(4),s=Object(v.a)({},(function(){var t=this,_=t.$createElement,e=t._self._c||_;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"explain"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#explain"}},[t._v("#")]),t._v(" explain")]),t._v(" "),e("h2",{attrs:{id:"基本介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#基本介绍"}},[t._v("#")]),t._v(" 基本介绍")]),t._v(" "),e("p",[t._v("explain一般用于select语句的性能分析，explain显示了mysql如何使用索引来处理select语句以及连接表。可以帮助选择更好的索引和写出更优化的查询语句。")]),t._v(" "),e("p",[t._v("使用")]),t._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("explain")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("返回")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("字段")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("id")]),t._v(" "),e("td",[t._v("执行顺序")])]),t._v(" "),e("tr",[e("td",[t._v("select_type")]),t._v(" "),e("td",[t._v("查询类型")])]),t._v(" "),e("tr",[e("td",[t._v("table")]),t._v(" "),e("td",[t._v("查询的表")])]),t._v(" "),e("tr",[e("td",[t._v("partitions")]),t._v(" "),e("td",[t._v("分区表命中的分区情况")])]),t._v(" "),e("tr",[e("td",[t._v("type")]),t._v(" "),e("td",[t._v("查找行的访问类型")])]),t._v(" "),e("tr",[e("td",[t._v("possible_keys")]),t._v(" "),e("td",[t._v("可能使用的索引")])]),t._v(" "),e("tr",[e("td",[t._v("key")]),t._v(" "),e("td",[t._v("最终使用的索引")])]),t._v(" "),e("tr",[e("td",[t._v("key_len")]),t._v(" "),e("td",[t._v("索引的长度")])]),t._v(" "),e("tr",[e("td",[t._v("ref")]),t._v(" "),e("td",[t._v("显示使用哪个列或常数与key一起从表中选择行")])]),t._v(" "),e("tr",[e("td",[t._v("rows")]),t._v(" "),e("td",[t._v("估算找到所需的记录所需要读取的行数")])]),t._v(" "),e("tr",[e("td",[t._v("filtered")]),t._v(" "),e("td",[t._v("显示了通过条件过滤出的行数的百分比估计值")])]),t._v(" "),e("tr",[e("td",[t._v("Extra")]),t._v(" "),e("td",[t._v("查询的详细信息")])])])]),t._v(" "),e("h2",{attrs:{id:"id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[t._v("#")]),t._v(" id")]),t._v(" "),e("p",[t._v("表示查询中执行select子句或操作表的顺序。")]),t._v(" "),e("ol",[e("li",[t._v("id值越大，优先级越高，越先执行")]),t._v(" "),e("li",[t._v("id相同，执行顺序由上至下")])]),t._v(" "),e("h2",{attrs:{id:"select-type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#select-type"}},[t._v("#")]),t._v(" select_type")]),t._v(" "),e("p",[t._v("select_type数据列指明各“单位select 查询”的查询类型，select_type数据列的列值如下所示:")]),t._v(" "),e("h3",{attrs:{id:"simple"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#simple"}},[t._v("#")]),t._v(" SIMPLE")]),t._v(" "),e("p",[t._v("简单的SELECT语句(不包括UNION操作或子查询操作)")]),t._v(" "),e("div",{staticClass:"language-sql line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sql"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("user")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'张三'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h3",{attrs:{id:"primary-union"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#primary-union"}},[t._v("#")]),t._v(" PRIMARY / UNION")]),t._v(" "),e("ol",[e("li",[t._v("PRIMARY"),e("br"),t._v("\n在进行union或包含子查询的查询时，位于最外层的select_type为primary（有且只有一个）；")]),t._v(" "),e("li",[t._v("UNION"),e("br"),t._v("\n除第一个外，第二个以后的所有select查询的select_type都为union（与外层的没有依赖关系），union的第一个单位select的select_type不是union，而是DERIVED。它是一个临时表，用于存储联合（Union）后的查询结果。")])]),t._v(" "),e("h3",{attrs:{id:"dependent-union-union-result"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dependent-union-union-result"}},[t._v("#")]),t._v(" DEPENDENT UNION / UNION RESULT")]),t._v(" "),e("ol",[e("li",[t._v("DEPENDENT UNION"),e("br"),t._v("\nUNION操作中,查询中处于内层的SELECT(内层的SELECT语句与外层的SELECT语句有依赖关系)")]),t._v(" "),e("li",[t._v("UNION RESULT"),e("br"),t._v("\nUNION操作的结果,id值通常为NULL")])]),t._v(" "),e("h3",{attrs:{id:"subquery-dependent-subquery"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subquery-dependent-subquery"}},[t._v("#")]),t._v(" SUBQUERY / DEPENDENT SUBQUERY")]),t._v(" "),e("ol",[e("li",[t._v("SUBQUERY"),e("br"),t._v("\n子查询中首个SELECT(如果有多个子查询存在):")]),t._v(" "),e("li",[t._v("DEPENDENT SUBQUERY"),e("br"),t._v("\n子查询中首个SELECT,但依赖于外层的表(如果有多个子查询存在)")])]),t._v(" "),e("h3",{attrs:{id:"derived-materialized"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#derived-materialized"}},[t._v("#")]),t._v(" DERIVED / MATERIALIZED")]),t._v(" "),e("ol",[e("li",[t._v("DERIVED"),e("br"),t._v("\n被驱动的SELECT子查询(子查询位于FROM子句)")]),t._v(" "),e("li",[t._v("MATERIALIZED"),e("br"),t._v("\n被物化的子查询")])]),t._v(" "),e("h3",{attrs:{id:"uncacheable-subquery-uncacheable-union"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#uncacheable-subquery-uncacheable-union"}},[t._v("#")]),t._v(" UNCACHEABLE SUBQUERY / UNCACHEABLE UNION")]),t._v(" "),e("ol",[e("li",[t._v("UNCACHEABLE SUBQUERY"),e("br"),t._v("\n对于外层的主表,子查询不可被物化,每次都需要计算(耗时操作)")]),t._v(" "),e("li",[t._v("UNCACHEABLE UNION"),e("br"),t._v("\nUNION操作中,内层的不可被物化的子查询(类似于UNCACHEABLE SUBQUERY)")])]),t._v(" "),e("h2",{attrs:{id:"type"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[t._v("#")]),t._v(" type")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("all")]),t._v(" "),e("td",[t._v("全表扫描")])]),t._v(" "),e("tr",[e("td",[t._v("index")]),t._v(" "),e("td",[t._v("索引全扫描")])]),t._v(" "),e("tr",[e("td",[t._v("range")]),t._v(" "),e("td",[t._v("索引范围扫描，常用语<,<=,>=,between等操作")])]),t._v(" "),e("tr",[e("td",[t._v("ref")]),t._v(" "),e("td",[t._v("使用非唯一索引扫描或唯一索引前缀扫描，返回单条记录，常出现在关联查询中")])]),t._v(" "),e("tr",[e("td",[t._v("eq_ref")]),t._v(" "),e("td",[t._v("类似ref，区别在于使用的是唯一索引，使用主键的关联查询")])]),t._v(" "),e("tr",[e("td",[t._v("const")]),t._v(" "),e("td",[t._v("表最多只有一行匹配，通用用于主键或者唯一索引比较时")])]),t._v(" "),e("tr",[e("td",[t._v("system")]),t._v(" "),e("td",[t._v("表只有一行数据")])])])]),t._v(" "),e("p",[t._v("性能从好到差，依次为\nsystem > const > eq_ref > ref > range > index > all")]),t._v(" "),e("h2",{attrs:{id:"key-len"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#key-len"}},[t._v("#")]),t._v(" key_len")]),t._v(" "),e("p",[t._v("用于在使用联合索引时，根据最左匹配原则，确定其使用的索引字段个数。\n计算规则为：")]),t._v(" "),e("ol",[e("li",[t._v("一般地，key_len 等于索引列类型字节长度，例如int类型为4-bytes，bigint为8-bytes；")]),t._v(" "),e("li",[t._v("如果是字符串类型，还需要同时考虑字符集因素，例如：CHAR(30) UTF8则key_len至少是90-bytes；")]),t._v(" "),e("li",[t._v("若该列类型定义时允许NULL，其key_len还需要再加 1-bytes；")]),t._v(" "),e("li",[t._v("若该列类型为变长类型，例如 VARCHAR（TEXT\\BLOB不允许整列创建索引，如果创建部分索引，也被视为动态列类型），其key_len还需要再加 2-bytes;")]),t._v(" "),e("li",[t._v("不同的字符集，一个字符占用的字节数不同。latin1编码的，一个字符占用一个字节，gbk编码的，一个字符占用两个字节，utf8编码的，一个字符占用三个字节。")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("列类型")]),t._v(" "),e("th",[t._v("KEY_LEN")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("int")]),t._v(" "),e("td",[t._v("4 + 1")]),t._v(" "),e("td",[t._v("允许NULL，加1-byte")])]),t._v(" "),e("tr",[e("td",[t._v("int not null")]),t._v(" "),e("td",[t._v("4")]),t._v(" "),e("td",[t._v("不允许NULL")])]),t._v(" "),e("tr",[e("td",[t._v("char(30) utf8")]),t._v(" "),e("td",[t._v("30 * 3 + 1")]),t._v(" "),e("td",[t._v("允许NULL，加1-byte")])]),t._v(" "),e("tr",[e("td",[t._v("varchar(30) not null utf8")]),t._v(" "),e("td",[t._v("30 * 3 + 2")]),t._v(" "),e("td",[t._v("动态列类型，加2-bytes")])]),t._v(" "),e("tr",[e("td",[t._v("varchar(30) utf8")]),t._v(" "),e("td",[t._v("30 * 3 + 2 + 1")]),t._v(" "),e("td",[t._v("动态列类型，加2-bytes；允许NULL，再加1-byte")])]),t._v(" "),e("tr",[e("td",[t._v("text(10) utf8")]),t._v(" "),e("td",[t._v("30 * 3 + 2 + 1")]),t._v(" "),e("td",[t._v("TEXT列截取部分，被视为动态列类型，加2-bytes；且允许NULL")])])])]),t._v(" "),e("p",[t._v("备注：key_len 只指示了WHERE中用于条件过滤时被选中的索引列，是不包含 ORDER BY/GROUP BY 这部分被选中的索引列。")]),t._v(" "),e("h2",{attrs:{id:"extra"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#extra"}},[t._v("#")]),t._v(" extra")]),t._v(" "),e("p",[t._v("using index 和using where只要使用了索引我们基本都能经常看到，而using index condition则是在mysql5.6后新加的新特性，简单来说，mysql开启了ICP的话，可以减少存储引擎访问基表的次数。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("值")]),t._v(" "),e("th",[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("using index")]),t._v(" "),e("td",[t._v("使用覆盖索引的时候就会出现")])]),t._v(" "),e("tr",[e("td",[t._v("using index & using where")]),t._v(" "),e("td",[t._v("查找使用了索引，但是需要的数据都在索引列中能找到，所以不需要回表查询数据")])]),t._v(" "),e("tr",[e("td",[t._v("using where")]),t._v(" "),e("td",[t._v("在查找使用索引的情况下，需要回表去查询所需的数据")])]),t._v(" "),e("tr",[e("td",[t._v("using index condition")]),t._v(" "),e("td",[t._v("查找使用了索引，但是需要回表查询数据")])]),t._v(" "),e("tr",[e("td",[t._v("using Filesort")]),t._v(" "),e("td",[t._v("表示MySQL需额外排序操作, 不能通过索引顺序达到排序效果")])])])]),t._v(" "),e("p",[t._v("效率从高到低依次为：\nusing index > using index & using where > using where > using index condition > using Filesort")])])}),[],!1,null,null,null);_.default=s.exports}}]);